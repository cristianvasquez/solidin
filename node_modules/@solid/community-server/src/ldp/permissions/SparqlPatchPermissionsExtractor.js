"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SparqlPatchPermissionsExtractor = void 0;
const sparqlalgebrajs_1 = require("sparqlalgebrajs");
const UnsupportedHttpError_1 = require("../../util/errors/UnsupportedHttpError");
const PermissionsExtractor_1 = require("./PermissionsExtractor");
/**
 * Generates permissions for a SPARQL DELETE/INSERT patch.
 * Updates with only an INSERT can be done with just append permissions,
 * while DELETEs require write permissions as well.
 */
class SparqlPatchPermissionsExtractor extends PermissionsExtractor_1.PermissionsExtractor {
    async canHandle(input) {
        if (input.method !== 'PATCH') {
            throw new UnsupportedHttpError_1.UnsupportedHttpError('Only PATCH operations are supported.');
        }
        if (!input.body) {
            throw new UnsupportedHttpError_1.UnsupportedHttpError('PATCH body is required to determine permissions.');
        }
        if (!this.isSparql(input.body)) {
            throw new UnsupportedHttpError_1.UnsupportedHttpError('Only SPARQL update PATCHes are supported.');
        }
        if (!this.isDeleteInsert(input.body.algebra)) {
            throw new UnsupportedHttpError_1.UnsupportedHttpError('Only DELETE/INSERT SPARQL update operations are supported.');
        }
    }
    async handle(input) {
        // Verified in `canHandle` call
        const op = input.body.algebra;
        const read = false;
        const write = this.needsWrite(op);
        // Since `append` is a specific type of write, it is true if `write` is true.
        const append = write || this.needsAppend(op);
        return { read, write, append };
    }
    isSparql(data) {
        return Boolean(data.algebra);
    }
    isDeleteInsert(op) {
        return op.type === sparqlalgebrajs_1.Algebra.types.DELETE_INSERT;
    }
    needsAppend(update) {
        return Boolean(update.insert && update.insert.length > 0);
    }
    needsWrite(update) {
        return Boolean(update.delete && update.delete.length > 0);
    }
}
exports.SparqlPatchPermissionsExtractor = SparqlPatchPermissionsExtractor;
//# sourceMappingURL=SparqlPatchPermissionsExtractor.js.map