import { HttpRequest } from '../../server/HttpRequest';
import { Operation } from '../operations/Operation';
import { BodyParser } from './BodyParser';
import { PreferenceParser } from './PreferenceParser';
import { RequestParser } from './RequestParser';
import { TargetExtractor } from './TargetExtractor';
/**
 * Input parsers required for a {@link BasicRequestParser}.
 */
export interface SimpleRequestParserArgs {
    targetExtractor: TargetExtractor;
    preferenceParser: PreferenceParser;
    bodyParser: BodyParser;
}
/**
 * Creates an {@link Operation} from an incoming {@link HttpRequest} by aggregating the results
 * of a {@link TargetExtractor}, {@link PreferenceParser}, and {@link BodyParser}.
 */
export declare class BasicRequestParser extends RequestParser {
    private readonly targetExtractor;
    private readonly preferenceParser;
    private readonly bodyParser;
    constructor(args: SimpleRequestParserArgs);
    canHandle(input: HttpRequest): Promise<void>;
    handle(input: HttpRequest): Promise<Operation>;
}
