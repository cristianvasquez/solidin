import { HttpRequest } from '../../server/HttpRequest';
import { RepresentationPreferences } from '../representation/RepresentationPreferences';
import { PreferenceParser } from './PreferenceParser';
/**
 * Extracts preferences from the accept-* headers from an incoming {@link HttpRequest}.
 * Supports Accept, Accept-Charset, Accept-Encoding, Accept-Language and Accept-DateTime.
 */
export declare class AcceptPreferenceParser extends PreferenceParser {
    constructor();
    canHandle(): Promise<void>;
    handle(input: HttpRequest): Promise<RepresentationPreferences>;
    /**
     * Converts a header string using the given parse function to {@link RepresentationPreference}[].
     * @param input - Input header string.
     * @param parseFunction - Function that converts header string to {@link AcceptHeader}.
     *
     * @returns A list of {@link RepresentationPreference}. Returns an empty list if input was not defined.
     */
    private parseHeader;
}
