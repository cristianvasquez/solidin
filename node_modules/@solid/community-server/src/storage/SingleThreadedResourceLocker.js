"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SingleThreadedResourceLocker = void 0;
const async_lock_1 = __importDefault(require("async-lock"));
/**
 * A resource locker making use of the `async-lock` library.
 */
class SingleThreadedResourceLocker {
    constructor() {
        this.locks = new async_lock_1.default();
    }
    /**
     * Acquires a new lock for the requested identifier.
     * Will resolve when the lock is available.
     * @param identifier - Identifier of resource that needs to be locked.
     *
     * @returns The {@link Lock} when it's available. Its release function needs to be called when finished.
     */
    async acquire(identifier) {
        return new Promise(async (resolve) => this.locks.acquire(identifier.path, (done) => {
            resolve({ release: async () => done() });
        }));
    }
}
exports.SingleThreadedResourceLocker = SingleThreadedResourceLocker;
//# sourceMappingURL=SingleThreadedResourceLocker.js.map