"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RepresentationConvertingStore = void 0;
const Util_1 = require("../util/Util");
const PassthroughStore_1 = require("./PassthroughStore");
/**
 * Store that overrides the `getRepresentation` function.
 * Tries to convert the {@link Representation} it got from the source store
 * so it matches one of the given type preferences.
 *
 * In the future this class should take the preferences of the request into account.
 * Even if there is a match with the output from the store,
 * if there is a low weight for that type conversions might still be preferred.
 */
class RepresentationConvertingStore extends PassthroughStore_1.PassthroughStore {
    constructor(source, converter) {
        super(source);
        this.converter = converter;
    }
    async getRepresentation(identifier, preferences, conditions) {
        const representation = await super.getRepresentation(identifier, preferences, conditions);
        if (this.matchesPreferences(representation, preferences)) {
            return representation;
        }
        return this.converter.handleSafe({ identifier, representation, preferences });
    }
    matchesPreferences(representation, preferences) {
        if (!preferences.type) {
            return true;
        }
        return Boolean(representation.metadata.contentType &&
            preferences.type.some((type) => type.weight > 0 &&
                Util_1.matchingMediaType(type.value, representation.metadata.contentType)));
    }
}
exports.RepresentationConvertingStore = RepresentationConvertingStore;
//# sourceMappingURL=RepresentationConvertingStore.js.map