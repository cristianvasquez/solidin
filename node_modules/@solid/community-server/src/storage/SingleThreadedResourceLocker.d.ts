import { ResourceIdentifier } from '../ldp/representation/ResourceIdentifier';
import { Lock } from './Lock';
import { ResourceLocker } from './ResourceLocker';
/**
 * A resource locker making use of the `async-lock` library.
 */
export declare class SingleThreadedResourceLocker implements ResourceLocker {
    private readonly locks;
    constructor();
    /**
     * Acquires a new lock for the requested identifier.
     * Will resolve when the lock is available.
     * @param identifier - Identifier of resource that needs to be locked.
     *
     * @returns The {@link Lock} when it's available. Its release function needs to be called when finished.
     */
    acquire(identifier: ResourceIdentifier): Promise<Lock>;
}
