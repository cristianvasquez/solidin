import { Patch } from '../ldp/http/Patch';
import { ResourceIdentifier } from '../ldp/representation/ResourceIdentifier';
import { Conditions } from './Conditions';
import { PassthroughStore } from './PassthroughStore';
import { PatchHandler } from './patch/PatchHandler';
import { ResourceStore } from './ResourceStore';
/**
 * {@link ResourceStore} using decorator pattern for the `modifyResource` function.
 * If the original store supports the {@link Patch}, behaviour will be identical,
 * otherwise one of the {@link PatchHandler}s supporting the given Patch will be called instead.
 */
export declare class PatchingStore extends PassthroughStore {
    private readonly patcher;
    constructor(source: ResourceStore, patcher: PatchHandler);
    modifyResource(identifier: ResourceIdentifier, patch: Patch, conditions?: Conditions): Promise<void>;
}
