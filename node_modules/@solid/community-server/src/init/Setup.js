"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Setup = void 0;
const streamify_array_1 = __importDefault(require("streamify-array"));
const ContentTypes_1 = require("../util/ContentTypes");
/**
 * Invokes all logic to setup a server.
 */
class Setup {
    constructor(httpServer, store, aclManager, runtimeConfig) {
        this.httpServer = httpServer;
        this.store = store;
        this.aclManager = aclManager;
        this.runtimeConfig = runtimeConfig;
    }
    /**
     * Set up a server at the given port and base URL.
     * @param data - Runtime config data.
     */
    async setup(data = {}) {
        this.runtimeConfig.reset(data);
        // Set up acl so everything can still be done by default
        // Note that this will need to be adapted to go through all the correct channels later on
        const aclSetup = async () => {
            const acl = `@prefix   acl:  <http://www.w3.org/ns/auth/acl#>.
@prefix  foaf:  <http://xmlns.com/foaf/0.1/>.

<#authorization>
    a               acl:Authorization;
    acl:agentClass  foaf:Agent;
    acl:mode        acl:Read;
    acl:mode        acl:Write;
    acl:mode        acl:Append;
    acl:mode        acl:Delete;
    acl:mode        acl:Control;
    acl:accessTo    <${this.runtimeConfig.base}>;
    acl:default     <${this.runtimeConfig.base}>.`;
            await this.store.setRepresentation(await this.aclManager.getAcl({ path: this.runtimeConfig.base }), {
                binary: true,
                data: streamify_array_1.default([acl]),
                metadata: {
                    raw: [],
                    profiles: [],
                    contentType: ContentTypes_1.TEXT_TURTLE,
                },
            });
        };
        await aclSetup();
        this.httpServer.listen(this.runtimeConfig.port);
        return this.runtimeConfig;
    }
}
exports.Setup = Setup;
//# sourceMappingURL=Setup.js.map