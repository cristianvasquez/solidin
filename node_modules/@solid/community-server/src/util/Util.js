"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.matchingMediaType = exports.trimTrailingSlashes = exports.readableToString = exports.ensureTrailingSlash = void 0;
const arrayify_stream_1 = __importDefault(require("arrayify-stream"));
/**
 * Makes sure the input path has exactly 1 slash at the end.
 * Multiple slashes will get merged into one.
 * If there is no slash it will be added.
 *
 * @param path - Path to check.
 *
 * @returns The potentially changed path.
 */
exports.ensureTrailingSlash = (path) => path.replace(/\/*$/u, '/');
/**
 * Joins all strings of a stream.
 * @param stream - Stream of strings.
 *
 * @returns The joined string.
 */
exports.readableToString = async (stream) => (await arrayify_stream_1.default(stream)).join('');
/**
 * Makes sure the input path has no slashes at the end.
 *
 * @param path - Path to check.
 *
 * @returns The potentially changed path.
 */
exports.trimTrailingSlashes = (path) => path.replace(/\/+$/u, '');
/**
 * Checks if the given two media types/ranges match each other.
 * Takes wildcards into account.
 * @param mediaA - Media type to match.
 * @param mediaB - Media type to match.
 *
 * @returns True if the media type patterns can match each other.
 */
exports.matchingMediaType = (mediaA, mediaB) => {
    const [typeA, subTypeA] = mediaA.split('/');
    const [typeB, subTypeB] = mediaB.split('/');
    if (typeA === '*' || typeB === '*') {
        return true;
    }
    if (typeA !== typeB) {
        return false;
    }
    if (subTypeA === '*' || subTypeB === '*') {
        return true;
    }
    return subTypeA === subTypeB;
};
//# sourceMappingURL=Util.js.map